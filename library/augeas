#!/usr/bin/python

import augeas

log=None

def debug( fn ):
    def debug_fn(*args,**kwargs):
        print "DEBUG %s ( %s %s )" % ( fn.__name__, args, kwargs )
        fn(*args,**kwargs)
    return debug_fn


class AugeasWrapper:
    def __init__(self,root=None):
        self.root=root
        self.aug=augeas.Augeas(self.root)

    @debug
    def defvar(self,*args,**kwargs):
        self.aug.defvar(str(args[0]),str(args[1]))

    @debug
    def load(self,*args,**kwargs):
        self.aug.load()

    @debug
    def save(self,*args,**kwargs):
        pass

    @debug
    def touch(self,*args,**kwargs):
        pass

    @debug
    def set(self,*args,**kwargs):
        pass

    @debug
    def augprint(self,*args,**kwargs):
        pass

def main():
    module = AnsibleModule(
        argument_spec = dict(
             commands  = dict(required=True),
             augdebug  = dict(),
             augroot      = dict(default=None),
        ),
        supports_check_mode = True,
    )

    commands=module.params['commands']
    command_list=[]
    if type(commands) == type(''):
        # single string
        cmd_array=commands.split()
        command_list.append(cmd_array)

    elif type(commands) == type({}):
        for k in commands.keys():
            command_list.append((k,commands[k]))
    elif type(commands) == type([]):
        for c in commands:
            command_list.append(c)

    if module.params['augdebug']:
        f=open(module.params['augdebug'],'a')
        f.write("\n\t".join(map(str,command_list))+"\n")
        f.close()

    a=AugeasWrapper(module.params['augroot'])
    for full_command in command_list:
        if type(full_command) in (type(''),type(u'')):
            command_name=full_command
            params=None
        else:
            command_name=full_command[0]
            if len(full_command) > 1:
                params=full_command[1:]
            else:
                params=None
        command=getattr(a,command_name)
        if params:
            command(*params)
        else:
            command()
    module.exit_json(changed=True)

# import module snippets
from ansible.module_utils.basic import *
main()
